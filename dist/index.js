var i={id:"randomized",handler:(i,{services:e})=>{const{ItemsService:t}=e;i.get("/:collection",(async(i,e)=>{var a;const n=new t(i.params.collection,{schema:i.schema,accountability:i.accountability});try{if(+(null==(a=i.sanitizedQuery)?void 0:a.limit)>0){const t=i.sanitizedQuery.limit,a=function(i,e){let t,a,n=Math.min(i.length);for(;n;)a=Math.floor(Math.random()*n--),t=i[n],i[n]=i[a],i[a]=t;return i.slice(0,Math.min(e,i.length))}(await n.readByQuery({...i.sanitizedQuery,limit:-1,fields:["id"]}),t).map((({id:i})=>i)),r=i.sanitizedQuery.filter?{_and:[{id:{_in:a}},i.sanitizedQuery.filter]}:{id:{_in:a}},l=await n.readByQuery({...i.sanitizedQuery,filter:r});e.json(l)}else{const t=await n.readByQuery(i.sanitizedQuery);e.json(function(i){let e,t,a=i.length;for(;a;)t=Math.floor(Math.random()*a--),e=i[a],i[a]=i[t],i[t]=e;return i}(t))}}catch(i){e.json(i)}}))}};export{i as default};
