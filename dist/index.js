var e={id:"randomized",handler:(e,{services:i})=>{const{ItemsService:t}=i;e.get("/:collection",(async(e,i)=>{var n;const a=new t(e.params.collection,{schema:e.schema,accountability:e.accountability});try{if(+(null==(n=e.sanitizedQuery)?void 0:n.limit)>0){const t=e.sanitizedQuery.limit,n=function(e,i){let t=[],n=Math.min(i,e.length);for(;t.length<n;){const i=e.splice(Math.floor(Math.random()*e.length),1);t.push(i[0])}return t}(await a.readByQuery({...e.sanitizedQuery,limit:-1,fields:["id"]}),t).map((({id:e})=>e)),r=e.sanitizedQuery.filter?{_and:[{id:{_in:n}},e.sanitizedQuery.filter]}:{id:{_in:n}},s=await a.readByQuery({...e.sanitizedQuery,filter:r});i.json(s)}else{const t=await a.readByQuery(e.sanitizedQuery);i.json(function(e){let i=[];for(;e.length>0;){const t=e.splice(Math.floor(Math.random()*e.length),1);i.push(t[0])}return i}(t))}}catch(e){i.json(e)}}))}};export{e as default};
